# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.languages: ['ru', 'en', 'bg', 'de', 'pt']
    google_api.client_id:     '%env(GOOGLE_CLIENT_ID)%'
    google_api.client_secret: '%env(GOOGLE_CLIENT_SECRET)%'
    google_api.redirect_uri:  '%env(resolve:GOOGLE_REDIRECT_URI)%'
    google_api.auth_config:   '%kernel.project_dir%/google/cal.json'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\DatabaseTranslator:
        decorates: 'translator'
        arguments: ['@.inner', '@App\Repository\TranslationRepository']

    App\EventSubscriber\TranslationSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    App\Service\GoogleClientFactory:
        arguments:
            $clientId:     '%google_api.client_id%'
            $clientSecret: '%google_api.client_secret%'
            $redirectUri:  '%google_api.redirect_uri%'
            $authConfig:   '%google_api.auth_config%'

    Google\Service\Calendar:
        factory: ['@App\Service\GoogleClientFactory', 'createClient']
        # la fabrique retourne un Google\Client, on doit donc indiquer
        # l'argument pour construire Calendar
        arguments:
            - '@=service("App\\Service\\GoogleClientFactory").createClient()'